---
import Mail from '@icons/Mail.astro'

import { getI18N } from '@c/i18n'

const { currentLocale } = Astro
const i18n = getI18N({ currentLocale })
---

<section class="w-full mt-3" id="contact">
  <article class="flex flex-col place-items-center">
    <div class="hidden items-center p-4 mb-3 text-sm rounded-lg bg-gray-800 text-blue-400" role="alert" id="success">
      <svg class="flex-shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
      </svg>
      <span class="sr-only">Info</span>
      <div>
        <span class="font-medium">{i18n.CONTACT.ALERTS.SUCCESS}</span>
      </div>
    </div>
    <div class="hidden items-center p-4 mb-3 text-sm rounded-lg bg-gray-800 text-red-400" id="not-success" role="alert">
      <svg class="flex-shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
      </svg>
      <span class="sr-only">Info</span>
      <div>
        <span class="font-medium">{i18n.CONTACT.ALERTS.ERROR}</span>
      </div>
    </div>
  </article>
  <div class="flex flex-row items-center p-1 gap-3 text-white/60">
    <Mail class="md:size-5 size-4" />
    <h3 class="md:text-base text-md">{i18n.CONTACT.LABEL}</h3>
  </div>
  <form class="max-w-md" id="contactForm">
    <div class="relative z-0 w-full mb-3 group">
      <input type="text" id="floating_name" class="block py-2.5 px-0 w-full md:text-sm text-lg text-gray-100 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-green-400 peer" placeholder=" " required />
      <label for="floating_name" class="peer-focus:font-medium absolute md:text-sm text-base text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-green-400 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">{i18n.CONTACT.INPUT_PLACEHOLDER}</label>
    </div>
    <div class="relative z-0 w-full mb-3 group">
      <label for="message" class="block mb-2 md:text-sm text-base font-medium text-gray-400">{i18n.CONTACT.INPUT_PLACEHOLDER_2}</label>
      <textarea id="message" rows="4" class="block p-2.5 w-full md:text-sm text-lg text-gray-100 bg-transparent rounded-lg border-2 border-green-400 focus:ring-blue-500 focus:border-green-400" placeholder={i18n.CONTACT.INPUT_PLACEHOLDER_3}></textarea>
    </div>
    <button type="submit" id="buttonF" class="text-[#2e2e2e] bg-green-400 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">{i18n.CONTACT.BUTTON}</button>
  </form>
  
</section>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const success = document.getElementById('success')
    const notSuccess = document.getElementById('not-success')
    const form = document.getElementById('contactForm')
  
    form.addEventListener('submit', async (e) => {
      e.preventDefault()
      const name = document.getElementById('floating_name').value
      const message = document.getElementById('message').value
  
      const data = { name, message }
  
      const apiUrl = 'https://resend-api-dev-ajrd.3.us-1.fl0.io/send-email'
  
      const requestOptions = {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }
  
      try {
        const response = await fetch(apiUrl, requestOptions)
  
        if (!response.ok) {
          throw new Error('Network response was not ok')
        }
  
        success.classList.remove('hidden')
        setTimeout(() => {
          success.classList.add('hidden')
        }, 2000)
      } catch (error) {
        console.log(error)
        notSuccess.classList.remove('hidden')
        setTimeout(() => {
          notSuccess.classList.add('hidden')
        }, 2000)
      }
  
      e.target.reset()
    })
  })

</script>
