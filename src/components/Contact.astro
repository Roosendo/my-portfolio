---
import Mail from '@icons/Mail.astro';
import AlertMessage from './AlertMessage.astro';

import { getI18N } from '@c/i18n';

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<section class="w-full mt-3 animate-scroll" id="contact">
	<article class="flex flex-col place-items-center">
		<AlertMessage
			type="success"
			message={i18n.CONTACT.ALERTS.SUCCESS}
			divId="success"
		/>
		<AlertMessage
			type="error"
			message={i18n.CONTACT.ALERTS.ERROR}
			divId="not-success"
		/>
	</article>
	<div
		class="flex flex-row items-center p-1 gap-3 dark:text-white/60 text-black/60"
	>
		<Mail class="md:size-5 size-4" />
		<h3 class="md:text-base text-md">{i18n.CONTACT.LABEL}</h3>
	</div>
	<form class="max-w-md" id="contactForm">
		<div class="relative z-0 w-full mb-3 group">
			<input
				type="text"
				autocomplete="off"
				id="floating_name"
				class="block py-2.5 px-0 w-full md:text-sm text-lg tracking-wide dark:text-gray-100 text-gray-500 bg-transparent border-0 border-b-2 dark:border-gray-300 border-gray-500 appearance-none focus:outline-none focus:ring-0 dark:focus:border-green-400 focus:border-green-600 peer"
				placeholder=" "
				required
			/>
			<label
				for="floating_name"
				class="peer-focus:font-medium absolute md:text-sm text-base dark:text-gray-400 text-gray-600 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto dark:peer-focus:text-green-400 peer-focus:text-green-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
				>{i18n.CONTACT.INPUT_PLACEHOLDER}</label
			>
		</div>
		<div class="relative z-0 w-full my-9 group">
			<textarea
				id="message"
				rows="4"
				class="block p-2.5 w-full md:text-sm text-lg tracking-wide resize-none dark:text-gray-100 text-gray-500 bg-transparent rounded-lg border-2 dark:border-gray-300 border-gray-500 dark:focus:border-green-400 focus:border-green-600 outline-none peer"
				placeholder={i18n.CONTACT.INPUT_PLACEHOLDER_3}></textarea>
			<label
				for="message"
				class="absolute md:-translate-y-32 -translate-y-40 duration-300 md:text-sm text-base font-medium dark:text-gray-400 text-gray-600 dark:peer-focus:text-green-400 peer-focus:text-green-600"
				>{i18n.CONTACT.INPUT_PLACEHOLDER_2}</label
			>
		</div>
		<button
			type="submit"
			id="buttonF"
			class="dark:text-green-400 text-green-600 -my-5 dark:bg-[#2e2e2e] bg-transparent dark:hover:bg-green-400 hover:bg-green-600 dark:hover:text-[#2e2e2e] hover:text-[#2e2e2e] focus:outline-none ring-2 dark:ring-green-400 ring-green-600 transition-colors font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center"
			>{i18n.CONTACT.BUTTON}</button
		>
		<button
			disabled
			type="button"
			id="buttonL"
			class="text-[#2e2e2e] dark:bg-green-400 bg-green-600 dark:hover:bg-green-500 hover:bg-green-700 font-medium rounded-lg text-sm px-5 py-2.5 text-center -my-5 hidden items-center w-full sm:w-auto"
		>
			<svg
				aria-hidden="true"
				role="status"
				class="inline w-4 h-4 me-3 text-[#2e2e2e] animate-spin"
				viewBox="0 0 100 101"
				fill="none"
			>
				<path
					d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
					fill="#3E3E3E"></path>
				<path
					d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
					fill="currentColor"></path>
			</svg>
			{i18n.CONTACT.BUTTONLOADING}
		</button>
	</form>
</section>

<script>
	import { showAndHideAlert, sendEmail } from '@u/CopyFunctionality';
	const success = document.querySelector('#success') as HTMLDivElement;
	const notSuccess = document.querySelector('#not-success') as HTMLDivElement;
	const form = document.querySelector('#contactForm') as HTMLFormElement;

	form.addEventListener('submit', async (e) => {
		e.preventDefault();

		const name = (document.querySelector('#floating_name') as HTMLInputElement)
			.value;
		const message = (document.querySelector('#message') as HTMLTextAreaElement)
			.value;

		const buttonPrimary = document.querySelector(
			'#buttonF'
		) as HTMLButtonElement;
		const buttonLoading = document.querySelector(
			'#buttonL'
		) as HTMLButtonElement;

		buttonPrimary.classList.add('hidden');
		buttonLoading.classList.remove('hidden');

		const response = await sendEmail(name, message);

		if (!response) {
			showAndHideAlert(notSuccess);
		} else {
			showAndHideAlert(success);
		}

		(e.target as HTMLFormElement).reset();

		buttonLoading.classList.add('hidden');
		buttonPrimary.classList.remove('hidden');
	});
</script>
